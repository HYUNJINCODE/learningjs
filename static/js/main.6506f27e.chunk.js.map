{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweets.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","TweetFactory","userObj","attachment","setAttachment","tweet","setTweet","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","newDisplayName","setNewDisplayName","getMyTweets","where","orderBy","get","updateProfile","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAaAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAIV,IAAMO,EAAmBV,IACnBW,EAAcX,IAASY,OACvBC,EAAYb,IAASc,YACrBC,EAAiBf,IAASgB,U,sECoDxBC,EAnEE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEWF,mBAAS,IAFpB,mBAEdG,EAFc,KAEJC,EAFI,OAGeJ,oBAAS,GAHxB,mBAGdK,EAHc,KAGFC,EAHE,OAIKN,mBAAS,IAJd,mBAIdO,EAJc,KAIPC,EAJO,KAKfC,EAAW,SAACC,GAAW,IAAD,EAGtBA,EADFC,OAAUC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAEL,UAATD,EAAkBV,EAASW,GACb,aAATD,GAAqBR,EAAYS,IAEtCC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAMEZ,EAAYwB,+BACvBhB,EACAE,GARS,OAMXe,EANW,+CAYEzB,EAAY0B,2BAA2BlB,EAAOE,GAZhD,QAYXe,EAZW,eAcbE,QAAQC,IAAIH,GAdC,kDAgBbV,EAAS,KAAMc,SAhBF,0DAAH,sDAoBd,OACE,qCACE,uBAAMR,SAAUA,EAAUS,UAAU,YAApC,UACE,uBACEX,KAAK,QACLY,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRb,MAAOZ,EACPQ,SAAUA,EACVc,UAAU,cAEZ,uBACEX,KAAK,WACLY,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRb,MAAOV,EACPM,SAAUA,EACVc,UAAU,cAEZ,uBACEC,KAAK,SACLX,MAAOR,EAAa,iBAAmB,SACvCqB,UAAQ,EACRH,UAAU,yBAEXhB,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAEzC,sBAAMoB,QA9BY,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MA8BnBL,UAAU,aAAxC,SACGlB,EAAa,UAAY,uBCvBnBwB,EAjCF,WACX,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAKP,YAHDH,EACRF,EADFC,OAAUC,MAIVmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACnB,WAATpB,IACTmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBARnB,SAUdxC,EAAYyC,gBAAgBH,GAVd,2CAAH,sDAYnB,OACE,sBAAKR,UAAU,gBAAf,UACE,cAAC,IAAD,CACEY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACE,yBAAQX,KAAK,SAASe,QAASG,EAAeP,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMM,SAE9C,yBAAQ7B,KAAK,SAASe,QAASG,EAAeP,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBC2CvCC,EA3ED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACT7C,oBAAS,GADA,mBAChC8C,EADgC,KACvBC,EADuB,OAEP/C,mBAAS4C,EAASI,MAFX,mBAEhCC,EAFgC,KAEtBC,EAFsB,KAGjCC,EAAa,uCAAG,sBAAApC,EAAA,0DACTqC,OAAOC,QAAQ,+CADN,gCAIZ1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAJ3B,uBAKZ3D,EAAe4D,WAAWb,EAASc,eAAeF,SALtC,2CAAH,qDAQbG,EAAgB,WACpBZ,GAAW,SAACnB,GAAD,OAAWA,MAElBd,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAETrB,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAClDZ,KAAMC,IAHO,OAKfF,GAAW,GALI,2CAAH,sDAad,OACE,qBAAKxB,UAAU,QAAf,SACGuB,EACC,mCACGD,GACC,qCACE,uBAAM/B,SAAUA,EAAUS,UAAU,sBAApC,UACE,uBACEC,KAAK,OACLC,YAAY,kBACZZ,MAAOoC,EACPvB,UAAQ,EACRmC,WAAS,EACTpD,SAnBC,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZqC,EAAYrC,IAgBEU,UAAU,cAEZ,uBACEC,KAAK,SACLX,MAAM,eACNU,UAAU,eAGd,sBAAMI,QAASgC,EAAepC,UAAU,oBAAxC,yBAON,qCACE,6BAAKqB,EAASI,OACbJ,EAASc,eAAiB,qBAAKI,IAAKlB,EAASc,gBAC7Cb,GACC,sBAAKtB,UAAU,iBAAf,UACE,sBAAMI,QAASwB,EAAf,SACE,cAAC,IAAD,CAAiBhB,KAAM4B,QAEzB,sBAAMpC,QAASgC,EAAf,SACE,cAAC,IAAD,CAAiBxB,KAAM6B,iB,QCyBxBC,EAxFM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACAlE,mBAAS,IADT,mBAC7BmE,EAD6B,KACjBC,EADiB,OAEVpE,mBAAS,IAFC,mBAE7BqE,EAF6B,KAEtBC,EAFsB,KAI9BxD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACD,KAAVsD,EADW,oDAIf3D,EAAMM,iBACF0C,EAAgB,GACD,KAAfS,EANW,wBAOPI,EAAgB1E,EACnB2E,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,iBATd,SAUUJ,EAAcK,UAAUT,EAAY,YAV9C,cAUPU,EAVO,iBAWSA,EAASL,IAAIM,iBAXtB,QAWbpB,EAXa,sBAaTd,EAAW,CACfI,KAAMqB,EACNU,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQQ,IACnBhB,iBAjBa,UAmBT/D,EAAUwF,WAAW,UAAUC,IAAIxC,GAnB1B,QAoBf0B,EAAS,IACTF,EAAc,IArBC,4CAAH,sDA4Cd,OACE,uBAAMtD,SAAUA,EAAUS,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVV,MAAOwD,EACP5D,SA3BS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZyD,EAASzD,IAwBHW,KAAK,OACLC,YAAY,uBACZ4D,UAAW,MAGb,uBAAO7D,KAAK,SAASX,MAAM,SAASU,UAAU,2BAEhD,wBAAO+D,IAAI,cAAc/D,UAAU,sBAAnC,UACE,8CACA,cAAC,IAAD,CAAiBY,KAAMoD,SAEzB,uBACE/D,KAAK,OACLgE,OAAO,UACP/E,SApCe,SAACC,GAAW,IAIzB+E,EADF/E,EADFC,OAAU+E,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnB3B,EAAc2B,IAEhBJ,EAAOM,cAAcR,IAyBjBlC,GAAG,cACHhB,MAAO,CACL2D,QAAS,KAGZ/B,GACC,sBAAK5C,UAAU,0BAAf,UACE,qBAAKuC,IAAKK,EAAY5B,MAAO,CAAE4D,gBAAiBhC,KAChD,sBAAK5C,UAAU,qBAAqBI,QA/BlB,kBAAMyC,EAAc,KA+BtC,UACE,0CACA,cAAC,IAAD,CAAiBjC,KAAMiE,gBCpDpBC,EA5BF,SAAC,GAAiB,IAAfnC,EAAc,EAAdA,QAAc,EACAlE,mBAAS,IADT,mBACrBsG,EADqB,KACbC,EADa,KAa5B,OAVAC,qBAAU,WACR7G,EAAUwF,WAAW,UAAUsB,YAAW,SAACC,GACzC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACvD,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAIpC,WAETqF,EAAUI,QAEX,IAGD,sBAAKpF,UAAU,YAAf,UACE,cAAC,EAAD,CAAc2C,QAASA,IACvB,qBAAK3B,MAAO,CAAEuE,UAAW,IAAzB,SACGR,EAAOO,KAAI,SAACxC,GAAD,OACV,cAAC,EAAD,CAEEzB,SAAUyB,EACVxB,QAASwB,EAAMa,YAAchB,EAAQQ,KAFhCL,EAAMd,aCYRwD,EAhCI,SAAC,GAAD,IAAG7C,EAAH,EAAGA,QAAH,OACjB,8BACE,qBAAI3B,MAAO,CAAEyE,QAAS,OAAQC,eAAgB,SAAUH,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMI,GAAG,IAAI3E,MAAO,CAAE4E,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiBhF,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BAEE,eAAC,IAAD,CACE4E,GAAG,WACH3E,MAAO,CACL6E,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiBpF,KAAMqF,IAAQnF,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAEuE,UAAW,IAA1B,SACG5C,EAAQuD,YAAR,UACMvD,EAAQuD,YADd,kBAEG,uBCzBD,cAA+B,IAA5BC,EAA2B,EAA3BA,YAAaxD,EAAc,EAAdA,QAAc,EAEClE,mBAASkE,EAAQuD,aAFlB,mBAEpCE,EAFoC,KAEpBC,EAFoB,KAOrCC,EAAW,uCAAG,sBAAA9G,EAAA,sEACGpB,EAClBwF,WAAW,UACX2C,MAAM,YAAa,KAAM5D,EAAQQ,KACjCqD,QAAQ,aACRC,MALe,yDAAH,qDAOjBxB,qBAAU,WACRqB,OAEF,IAMM/G,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACFkD,EAAQuD,cAAgBE,EAFb,gCAGPzD,EAAQ+D,cAAc,CAC1BR,YAAaE,IAJF,OAMbD,IANa,2CAAH,sDASd,OACE,sBAAKnG,UAAU,YAAf,UACE,uBAAMT,SAAUA,EAAUS,UAAU,cAApC,UACE,uBACEC,KAAK,OACLqC,WAAS,EACTpC,YAAY,eACZhB,SAtBS,SAACC,GAAW,IAEfG,EACRH,EADFC,OAAUE,MAEZ+G,EAAkB/G,IAmBZA,MAAO8G,EACPpG,UAAU,cAEZ,uBACEA,UAAU,UACVgB,MAAO,CAAEuE,UAAW,IACpBtF,KAAK,SACLX,MAAM,sBAGV,sBAAMU,UAAU,2BAA2BI,QA/CzB,WACpBlC,EAAYyI,WA8CV,yBCLSC,EArCG,SAAC,GAA0C,IAAxCT,EAAuC,EAAvCA,YAAaU,EAA0B,EAA1BA,WAAYlE,EAAc,EAAdA,QAC5C,OACE,eAAC,IAAD,WACGkE,GAAc,cAAC,EAAD,CAAYlE,QAASA,IACpC,cAAC,IAAD,UACGkE,EACC,sBACE7F,MAAO,CACL8F,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRzB,UAAW,GACXE,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMvE,QAASA,MAEjB,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,WAAlB,SACE,cAACC,EAAD,CAASxE,QAASA,EAASwD,YAAaA,MAE1C,cAAC,IAAD,CAAUiB,KAAK,IAAIzB,GAAG,SAGxB,qCACE,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUE,KAAK,IAAIzB,GAAG,eCUnB0B,MAhDf,WAAgB,IAAD,EACW5I,oBAAS,GADpB,mBACN6I,EADM,KACAC,EADA,OAEuB9I,oBAAS,GAFhC,mBAENoI,EAFM,KAEMW,EAFN,OAGiB/I,mBAAS,MAH1B,mBAGNkE,EAHM,KAGG8E,EAHH,KAgCb,OA5BAxC,qBAAU,WACR/G,EAAYwJ,oBAAmB,SAACC,GAC1BA,GACFH,GAAc,GACdC,EAAW,CACTvB,YAAayB,EAAKzB,YAClB/C,IAAKwE,EAAKxE,IACVuD,cAAe,SAACkB,GAAD,OAAUD,EAAKjB,cAAckB,QAG9CH,EAAW,MACXD,GAAc,IAEhBD,GAAQ,QAET,IAcD,mCACGD,EACC,cAAC,EAAD,CACEnB,YAhBY,WAClB,IAAMwB,EAAOzJ,EAAY2J,YACzBJ,EAAW,CACTvB,YAAayB,EAAKzB,YAClB/C,IAAKwE,EAAKxE,IACVuD,cAAe,SAACkB,GAAD,OAAUD,EAAKjB,cAAckB,OAYxCf,WAAYA,EACZlE,QAASA,IAGX,qB,MCtCRmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6506f27e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUR_ID,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") setEmail(value);\r\n    else if (name === \"password\") setPassword(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        //create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //login\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          required\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Tweet = ({ tweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n    if (ok) {\r\n      //delete tweet\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewTweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your tweet\"\r\n                  value={newTweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                  className=\"formInput\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update Tweet\"\r\n                  className=\"formBtn\"\r\n                ></input>\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{tweetObj.text}</h4>\r\n          {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, { useState } from \"react\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const [tweet, setTweet] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (tweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"tweets\").add(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setTweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={tweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        id=\"attach-file\"\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img src={attachment} style={{ backgroundImage: attachment }} />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Tweet from \"components/Tweets\";\r\nimport { storageService } from \"fbase\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n      const tweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setTweets(tweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {tweets.map((tweet) => (\r\n          <Tweet\r\n            key={tweet.id}\r\n            tweetObj={tweet}\r\n            isOwner={tweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        {/* {console.log(userObj)} */}\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// const Profile = () => <span>Profile</span>;\r\nexport default ({ refreshUser, userObj }) => {\r\n  //   const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    // history.push(\"/\");\r\n  };\r\n  const getMyTweets = async () => {\r\n    const tweets = await dbService\r\n      .collection(\"tweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n  };\r\n  useEffect(() => {\r\n    getMyTweets();\r\n  });\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj}></Home>\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import AppRouter from \"components/Router\";\nimport React, { useState, useEffect } from \"react\";\nimport { authService } from \"fbase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n      // 원하는 부분을 호출하기위한 중간 함수인 셈이다. 객체가 복잡하면 리액트가 세세하게 내부쪽 상태가 바뀐걸 감지못하므로 객체를\n      //간단하게 바꿔주고(전 객체와 다른점을 감지해서 리렌더링 할 수 있도록) 실제로 업데이트를 해야하는 부분에서는 가짜함수를  만들어서 그함수를 이용해서 진짜함수를 호출해서, 실제 데이터베이스를 업데이트시킨다.\n      //다른 방법으로는 Object.assign({}, user) 객체를 복사해서 리액트가 상태가 바뀌었음을 인지하게 하는 것이다.\n      // 이작업은 firebase로부터 react상태를 업데이트 하기위한 작업으로 firebase상태바뀐것을 리액트에연결해서 컴포넌트들을 업데이트 하는 것이다.\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        ></AppRouter>\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Twitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport fbase from \"./fbase.js\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}